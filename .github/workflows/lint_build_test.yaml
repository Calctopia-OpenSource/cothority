name: Lint, Build, and Test

on:
  pull_request:

env:
  NODE_VERSION: 10
  GO_VERSION: 1.15
  JAVA_VERSION: 9

jobs:
  javascript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: JavaScript - kyber
        run: |
          cd external/js/kyber
          npm ci
          npm run linter
          npm run build

      - name: JavaScript - cothority
        run: |
          cd external/js/cothority
          npm ci
          npm run linter
          npm link @dedis/kyber
          npm run build

  golang:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        golang-version: [1.14, 1.15] # Cannot use env. here :(

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.golang-version }}

      - name: Installing golint
        run: GO111MODULE=off go get -u golang.org/x/lint/golint

      - name: Testing proto-files
        run: make test_proto

      - name: Running lint and formatting
        run: |
          make -C conode verify
          make test_{fmt,lint,llvl}

      - name: Building everything
        run: go build ./...

  # As pre-commit doesn't like to be run in parallel, this step runs it only
  # for the latest go-version.
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Installing golint
        run: GO111MODULE=off go get -u golang.org/x/lint/golint

      - name: Running pre-commit
        uses: pre-commit/action@v2.0.0

  # The lint-build job is used to avoid writing a lot of 'needs:'
  lint-build:
    runs-on: ubuntu-latest
    needs:
      - javascript
      - golang
      - pre-commit
    steps:
      - name: Done linting and building
        run: echo Linting and Building done

  test-go:
    runs-on: ubuntu-latest
    needs:
      - lint-build
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: running tests
        run: go list -f '{{.Dir}}' ./... | xargs -n1 go test -race -short

  test-java:
    runs-on: ubuntu-latest
    needs:
      - lint-build
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: running tests
        run: make test_java

  test-js-kyber:
    runs-on: ubuntu-latest
    needs:
      - lint-build
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: test
        run: |
          cd external/js/kyber
          npm ci
          npm test

  test-js-cothority:
    runs-on: ubuntu-latest
    needs:
      - lint-build
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: test
        run: |
          make docker
          pushd external/js/kyber && npm ci && npm run link && popd
          cd external/js/cothority
          npm ci
          npm test
